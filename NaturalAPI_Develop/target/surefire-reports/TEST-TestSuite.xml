<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="TestSuite" time="2.695" tests="152" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\matte\OneDrive\Desktop\NaturalAPI\NaturalAPI_Develop\target\test-classes;C:\Users\matte\OneDrive\Desktop\NaturalAPI\NaturalAPI_Develop\target\classes;C:\Users\matte\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\matte\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\matte\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\matte\.m2\repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;C:\Users\matte\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;C:\Users\matte\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\matte\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr2\jackson-databind-2.10.0.pr2.jar;C:\Users\matte\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr2\jackson-annotations-2.10.0.pr2.jar;C:\Users\matte\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr2\jackson-core-2.10.0.pr2.jar;C:\Users\matte\.m2\repository\org\testng\testng\7.1.0\testng-7.1.0.jar;C:\Users\matte\.m2\repository\com\beust\jcommander\1.72\jcommander-1.72.jar;C:\Users\matte\.m2\repository\com\google\inject\guice\4.1.0\guice-4.1.0-no_aop.jar;C:\Users\matte\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\matte\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\matte\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar;C:\Users\matte\.m2\repository\org\yaml\snakeyaml\1.21\snakeyaml-1.21.jar;C:\Users\matte\.m2\repository\org\springframework\spring-test\5.2.5.RELEASE\spring-test-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-core\5.2.5.RELEASE\spring-core-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-jcl\5.2.5.RELEASE\spring-jcl-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-beans\5.2.5.RELEASE\spring-beans-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-context\5.2.5.RELEASE\spring-context-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-aop\5.2.5.RELEASE\spring-aop-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-expression\5.2.5.RELEASE\spring-expression-5.2.5.RELEASE.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="IT"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_191\jre\bin"/>
    <property name="sun.java.command" value="C:\Users\matte\AppData\Local\Temp\surefire1656732642320302939\surefirebooter6379554994919778285.jar C:\Users\matte\AppData\Local\Temp\surefire1656732642320302939 2020-05-10T21-08-20_781-jvmRun1 surefire3200909878931574333tmp surefire_05659944350672866555tmp"/>
    <property name="surefire.test.class.path" value="C:\Users\matte\OneDrive\Desktop\NaturalAPI\NaturalAPI_Develop\target\test-classes;C:\Users\matte\OneDrive\Desktop\NaturalAPI\NaturalAPI_Develop\target\classes;C:\Users\matte\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\matte\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\matte\.m2\repository\org\mockito\mockito-core\2.23.4\mockito-core-2.23.4.jar;C:\Users\matte\.m2\repository\net\bytebuddy\byte-buddy\1.9.3\byte-buddy-1.9.3.jar;C:\Users\matte\.m2\repository\net\bytebuddy\byte-buddy-agent\1.9.3\byte-buddy-agent-1.9.3.jar;C:\Users\matte\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\matte\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.10.0.pr2\jackson-databind-2.10.0.pr2.jar;C:\Users\matte\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.0.pr2\jackson-annotations-2.10.0.pr2.jar;C:\Users\matte\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.10.0.pr2\jackson-core-2.10.0.pr2.jar;C:\Users\matte\.m2\repository\org\testng\testng\7.1.0\testng-7.1.0.jar;C:\Users\matte\.m2\repository\com\beust\jcommander\1.72\jcommander-1.72.jar;C:\Users\matte\.m2\repository\com\google\inject\guice\4.1.0\guice-4.1.0-no_aop.jar;C:\Users\matte\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\matte\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\matte\.m2\repository\com\google\guava\guava\19.0\guava-19.0.jar;C:\Users\matte\.m2\repository\org\yaml\snakeyaml\1.21\snakeyaml-1.21.jar;C:\Users\matte\.m2\repository\org\springframework\spring-test\5.2.5.RELEASE\spring-test-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-core\5.2.5.RELEASE\spring-core-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-jcl\5.2.5.RELEASE\spring-jcl-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-beans\5.2.5.RELEASE\spring-beans-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-context\5.2.5.RELEASE\spring-context-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-aop\5.2.5.RELEASE\spring-aop-5.2.5.RELEASE.jar;C:\Users\matte\.m2\repository\org\springframework\spring-expression\5.2.5.RELEASE\spring-expression-5.2.5.RELEASE.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\matte"/>
    <property name="user.language" value="it"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_191\jre"/>
    <property name="basedir" value="C:\Users\matte\OneDrive\Desktop\NaturalAPI\NaturalAPI_Develop"/>
    <property name="file.separator" value="\"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\matte\AppData\Local\Temp\surefire1656732642320302939\surefirebooter6379554994919778285.jar;C:\\Users\\matte\\.m2\\repository\\org\\jacoco\\org.jacoco.agent\\0.8.3\\org.jacoco.agent-0.8.3-runtime.jar"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_191\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_191\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_191\jre\classes"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="1.8.0_191-b12"/>
    <property name="user.name" value="matte"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_191\jre\lib\endorsed"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\matte\.m2\repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\matte\AppData\Local\Temp\"/>
    <property name="java.version" value="1.8.0_191"/>
    <property name="user.dir" value="C:\Users\matte\OneDrive\Desktop\NaturalAPI\NaturalAPI_Develop"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="idea.version2019.3.3" value="true"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_191\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Java\jdk1.8.0_191\bin;C:\Users\matte\OneDrive\Documenti\apache-maven-3.3.9\bin;C:\Program Files\Geth;C:\Users\matte\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="25.191-b12"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_191\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="52.0"/>
  </properties>
  <testcase name="createActionWithNameAndTypeNullAndScenarioAndStep on createActionWithNameAndTypeNullAndScenarioAndStep(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0.002"/>
  <testcase name="createActionWithNameAndTypeAndScenarioAndStep on createActionWithNameAndTypeAndScenarioAndStep(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="testAddObjectName on testAddObjectName(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="toStringActionCorrectly on toStringActionCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="setTypeCorrectly on setTypeCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="createActionWithNameAndTypeNotStringAndScenarioAndStep on createActionWithNameAndTypeNotStringAndScenarioAndStep(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="testGettingTypeNameCorrectly on testGettingTypeNameCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="testAddObjectParamWithString on testAddObjectParamWithString(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="createActionWithNameAndNullType on createActionWithNameAndNullType(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="addObjectParamCorrectly on addObjectParamCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="testRemoveObjectParamWithId on testRemoveObjectParamWithId(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="testGettingNameCorrectly on testGettingNameCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="getStepCorrectly on getStepCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="getScenarioCorrectly on getScenarioCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="toStringActionWithTwoParametersCorrectly on toStringActionWithTwoParametersCorrectly(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="createActionWithNameAndTypeNotString on createActionWithNameAndTypeNotString(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="createActionWithNameAndType on createActionWithNameAndType(fourcats.Entity.ActionTest)" classname="fourcats.Entity.ActionTest" time="0"/>
  <testcase name="testRequestActionByName on testRequestActionByName(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="testActorToString on testActorToString(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="testAddingOneActionCorrectly on testAddingOneActionCorrectly(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="testActorEmptyCorrectlyCreate on testActorEmptyCorrectlyCreate(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="testSettingNameOfActor on testSettingNameOfActor(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="testActorWithNameCorrectlyCreate on testActorWithNameCorrectlyCreate(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="testAddingMoreActionCorrectly on testAddingMoreActionCorrectly(fourcats.Entity.ActorTest)" classname="fourcats.Entity.ActorTest" time="0"/>
  <testcase name="getTextCorrectly on getTextCorrectly(fourcats.Entity.APITest)" classname="fourcats.Entity.APITest" time="0.004"/>
  <testcase name="getFileNameCorrectly on getFileNameCorrectly(fourcats.Entity.APITest)" classname="fourcats.Entity.APITest" time="0"/>
  <testcase name="setTextCorrectly on setTextCorrectly(fourcats.Entity.APITest)" classname="fourcats.Entity.APITest" time="0"/>
  <testcase name="setFileNameCorrectly on setFileNameCorrectly(fourcats.Entity.APITest)" classname="fourcats.Entity.APITest" time="0"/>
  <testcase name="testConstructor on testConstructor(fourcats.Entity.APITest)" classname="fourcats.Entity.APITest" time="0"/>
  <testcase name="testToString on testToString(fourcats.Entity.BALTest)" classname="fourcats.Entity.BALTest" time="0.623"/>
  <testcase name="tesAddDuplicateUserToBAL on tesAddDuplicateUserToBAL(fourcats.Entity.BALTest)" classname="fourcats.Entity.BALTest" time="0.008"/>
  <testcase name="getActors on getActors(fourcats.Entity.BALTest)" classname="fourcats.Entity.BALTest" time="0.001"/>
  <testcase name="testConstructor on testConstructor(fourcats.Entity.BALTest)" classname="fourcats.Entity.BALTest" time="0"/>
  <testcase name="ObjectParamSetRequiredCorrectly on ObjectParamSetRequiredCorrectly(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="setTypeCorrectly on setTypeCorrectly(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="ObjectParamSetNameCorrectly on ObjectParamSetNameCorrectly(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0.001"/>
  <testcase name="ObjectParamSetTypeCorrectly on ObjectParamSetTypeCorrectly(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="ObjectParamConvertedToStringCorrectly on ObjectParamConvertedToStringCorrectly(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="EmptyObjectParamCorrectCreation on EmptyObjectParamCorrectCreation(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="ObjectParamGetTypeCorrectly on ObjectParamGetTypeCorrectly(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="ObjectParamCorrectCreationWthName on ObjectParamCorrectCreationWthName(fourcats.Entity.ObjectParamTest)" classname="fourcats.Entity.ObjectParamTest" time="0"/>
  <testcase name="testTextFromPLA on testTextFromPLA(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0"/>
  <testcase name="getCustomClassCorrectly on getCustomClassCorrectly(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0"/>
  <testcase name="testExtensionFromPLA on testExtensionFromPLA(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0.001"/>
  <testcase name="getCustomBodyCorrectly on getCustomBodyCorrectly(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0"/>
  <testcase name="testSettingTextPLA on testSettingTextPLA(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0"/>
  <testcase name="testConstructor on testConstructor(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0.001"/>
  <testcase name="getTestClassCorrectly on getTestClassCorrectly(fourcats.Entity.PLATest)" classname="fourcats.Entity.PLATest" time="0"/>
  <testcase name="gettingNameCorrectly on gettingNameCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0"/>
  <testcase name="testingToStringCorrectly on testingToStringCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0"/>
  <testcase name="addingAttributeCorrectly on addingAttributeCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0.001"/>
  <testcase name="testConstructorStringAndMapCorrectly on testConstructorStringAndMapCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0.001"/>
  <testcase name="testGettingAttributesCorrectly on testGettingAttributesCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0"/>
  <testcase name="testConstructorStringCorrectly on testConstructorStringCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0"/>
  <testcase name="settingNameCorrectly on settingNameCorrectly(fourcats.Entity.TypeTest)" classname="fourcats.Entity.TypeTest" time="0.001"/>
  <testcase name="gettingBalCorrectly on gettingBalCorrectly(fourcats.frameworks.BalAnalyzerImplementationTest)" classname="fourcats.frameworks.BalAnalyzerImplementationTest" time="0.24"/>
  <testcase name="correctlySettingBalFile on correctlySettingBalFile(fourcats.frameworks.BalAnalyzerImplementationTest)" classname="fourcats.frameworks.BalAnalyzerImplementationTest" time="0.024"/>
  <testcase name="createBalAnalyzerCorrectly on createBalAnalyzerCorrectly(fourcats.frameworks.BalAnalyzerImplementationTest)" classname="fourcats.frameworks.BalAnalyzerImplementationTest" time="0"/>
  <testcase name="removingAPINotPresent on removingAPINotPresent(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="isClassNameNotPresentTest on isClassNameNotPresentTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="updatingAPICorrectly on updatingAPICorrectly(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="createDatakeeperCorrectly on createDatakeeperCorrectly(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="isCoupleBalPlaNOTPresentTest on isCoupleBalPlaNOTPresentTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="addingAPIWithoutIdCorrectly on addingAPIWithoutIdCorrectly(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0.001"/>
  <testcase name="addingAPIWithIdCorrectlyWithoutDuplicate on addingAPIWithIdCorrectlyWithoutDuplicate(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="removingAPIPresent on removingAPIPresent(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="gettingAPIWithId on gettingAPIWithId(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="isClassNamePresentTest on isClassNamePresentTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="addCoupleBlaPlaTest on addCoupleBlaPlaTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="isCoupleBalPlaPresentTest on isCoupleBalPlaPresentTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="gettingSizeOfAPIMap on gettingSizeOfAPIMap(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="isAPIPresentTest on isAPIPresentTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="isAPINotPresentTest on isAPINotPresentTest(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="updatingAPIWithSame on updatingAPIWithSame(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="addCoupleBlaPlaTestWithSameBal on addCoupleBlaPlaTestWithSameBal(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="gettingAPIMapCorrectly on gettingAPIMapCorrectly(fourcats.frameworks.DataKeeperTest)" classname="fourcats.frameworks.DataKeeperTest" time="0"/>
  <testcase name="writingAPITestCorrectly on writingAPITestCorrectly(fourcats.frameworks.FileSystemTest)" classname="fourcats.frameworks.FileSystemTest" time="0"/>
  <testcase name="loadingFileCorrectly on loadingFileCorrectly(fourcats.frameworks.FileSystemTest)" classname="fourcats.frameworks.FileSystemTest" time="0"/>
  <testcase name="loadingPLACorrectlyNotFound on loadingPLACorrectlyNotFound(fourcats.frameworks.FileSystemTest)" classname="fourcats.frameworks.FileSystemTest" time="0"/>
  <testcase name="loadingPLACorrectlyFound on loadingPLACorrectlyFound(fourcats.frameworks.FileSystemTest)" classname="fourcats.frameworks.FileSystemTest" time="0"/>
  <testcase name="writingPLATestCorrectly on writingPLATestCorrectly(fourcats.frameworks.FileSystemTest)" classname="fourcats.frameworks.FileSystemTest" time="0"/>
  <testcase name="writingAPICorrectly on writingAPICorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="addingAPIWithoutIdToDataKeeperCorrectly on addingAPIWithoutIdToDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="deletingAPIWithIdFromDataKeeperCorrectly on deletingAPIWithIdFromDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.001"/>
  <testcase name="addingAPIWithIdToDataKeeperCorrectly on addingAPIWithIdToDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.001"/>
  <testcase name="gettingAPIWithIdFromDataKeeperCorrectly on gettingAPIWithIdFromDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="isThisAPIPresentInDataKeeperCorrectly on isThisAPIPresentInDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.001"/>
  <testcase name="gettingSizeFromDataKeeperCorrectly on gettingSizeFromDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.001"/>
  <testcase name="addingCoupleBalPlaToDataKeeperCorrectly on addingCoupleBalPlaToDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.002"/>
  <testcase name="isCoupleBalPlaPresentInDataKeepeerCorrectly on isCoupleBalPlaPresentInDataKeepeerCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.001"/>
  <testcase name="isThisClassNamePresentInDataKeeperCorrectly on isThisClassNamePresentInDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="gettingADIMapWithIdFromDataKeeperCorrectly on gettingADIMapWithIdFromDataKeeperCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0.001"/>
  <testcase name="updatingAPIToDataKeepeerCorrectly on updatingAPIToDataKeepeerCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="loadingPLACorrectly on loadingPLACorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="openingFileCorrectly on openingFileCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="writingPLAToFileSystemCorrectly on writingPLAToFileSystemCorrectly(fourcats.frameworks.RepositoryTest)" classname="fourcats.frameworks.RepositoryTest" time="0"/>
  <testcase name="testCreateApiSuggestion on testCreateApiSuggestion(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0.002"/>
  <testcase name="testModifyApi on testModifyApi(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0.001"/>
  <testcase name="testModifyPla on testModifyPla(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0.001"/>
  <testcase name="testLoadingPla on testLoadingPla(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0"/>
  <testcase name="testingModifyApiGui on testingModifyApiGui(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0.001"/>
  <testcase name="testGenerateApi on testGenerateApi(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0.001"/>
  <testcase name="createControllerCorrectly on createControllerCorrectly(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0"/>
  <testcase name="testingCreatePla on testingCreatePla(fourcats.interfaceAdapters.ControllerTest)" classname="fourcats.interfaceAdapters.ControllerTest" time="0.001"/>
  <testcase name="testShowOutputMap on testShowOutputMap(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testShowModifyPla on testShowModifyPla(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testingCostructCorrectly on testingCostructCorrectly(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testGettingString on testGettingString(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testGettingMessage on testGettingMessage(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testShowOutput on testShowOutput(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testGettingCombo on testGettingCombo(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testShowLoadPla on testShowLoadPla(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0.001"/>
  <testcase name="testGettingMessagePla on testGettingMessagePla(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testShowGenMessage on testShowGenMessage(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testGettingModifyCustomPla on testGettingModifyCustomPla(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testGettingModifyApiPla on testGettingModifyApiPla(fourcats.interfaceAdapters.DataPresenterGuiTest)" classname="fourcats.interfaceAdapters.DataPresenterGuiTest" time="0"/>
  <testcase name="testShowOuput on testShowOuput(fourcats.interfaceAdapters.DataPresenterTest)" classname="fourcats.interfaceAdapters.DataPresenterTest" time="0.001"/>
  <testcase name="testingGettingMessage on testingGettingMessage(fourcats.interfaceAdapters.DataPresenterTest)" classname="fourcats.interfaceAdapters.DataPresenterTest" time="0"/>
  <testcase name="testingShowGenerationMessage on testingShowGenerationMessage(fourcats.interfaceAdapters.DataPresenterTest)" classname="fourcats.interfaceAdapters.DataPresenterTest" time="0.001"/>
  <testcase name="testGetMessageToShow on testGetMessageToShow(fourcats.interfaceAdapters.DataPresenterTest)" classname="fourcats.interfaceAdapters.DataPresenterTest" time="0"/>
  <testcase name="testingCorrectlyMethodCallModifyGui on testingCorrectlyMethodCallModifyGui(fourcats.usecaseinteractor.CreatePlaTest)" classname="fourcats.usecaseinteractor.CreatePlaTest" time="0.001"/>
  <testcase name="correctlyCreatingModifyApi on correctlyCreatingModifyApi(fourcats.usecaseinteractor.CreatePlaTest)" classname="fourcats.usecaseinteractor.CreatePlaTest" time="0"/>
  <testcase name="GenerateAPITestCorrectCreation on GenerateAPITestCorrectCreation(fourcats.usecaseinteractor.GenerateApiTest)" classname="fourcats.usecaseinteractor.GenerateApiTest" time="0"/>
  <testcase name="generateAPI on generateAPI(fourcats.usecaseinteractor.GenerateApiTest)" classname="fourcats.usecaseinteractor.GenerateApiTest" time="0"/>
  <testcase name="testingModifyApi on testingModifyApi(fourcats.usecaseinteractor.ModifyApiTest)" classname="fourcats.usecaseinteractor.ModifyApiTest" time="0.002"/>
  <testcase name="testingCorrectlyMethodCallModifyGui on testingCorrectlyMethodCallModifyGui(fourcats.usecaseinteractor.ModifyApiTest)" classname="fourcats.usecaseinteractor.ModifyApiTest" time="0.001"/>
  <testcase name="correctlyCreatingModifyApi on correctlyCreatingModifyApi(fourcats.usecaseinteractor.ModifyApiTest)" classname="fourcats.usecaseinteractor.ModifyApiTest" time="0.001"/>
  <testcase name="testingModify on testingModify(fourcats.usecaseinteractor.ModifyPlaTest)" classname="fourcats.usecaseinteractor.ModifyPlaTest" time="0.001"/>
  <testcase name="correctlyCreatingModifyApi on correctlyCreatingModifyApi(fourcats.usecaseinteractor.ModifyPlaTest)" classname="fourcats.usecaseinteractor.ModifyPlaTest" time="0"/>
  <testcase name="testingLoadingPlaCorrectly on testingLoadingPlaCorrectly(fourcats.usecaseinteractor.ModifyPlaTest)" classname="fourcats.usecaseinteractor.ModifyPlaTest" time="0.001"/>
  <testcase name="correctlyCreatingSuggestApi on correctlyCreatingSuggestApi(fourcats.usecaseinteractor.SuggestApiTest)" classname="fourcats.usecaseinteractor.SuggestApiTest" time="0.001"/>
  <testcase name="SuggestAPITestCreationFromWrongInput on SuggestAPITestCreationFromWrongInput(fourcats.usecaseinteractor.SuggestApiTest)" classname="fourcats.usecaseinteractor.SuggestApiTest" time="0"/>
  <testcase name="correctlysuggestionApiCreated on correctlysuggestionApiCreated(fourcats.usecaseinteractor.SuggestApiTest)" classname="fourcats.usecaseinteractor.SuggestApiTest" time="0.002"/>
  <testcase name="gettingCurrentAnswer on gettingCurrentAnswer(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="testAskingModifyApi on testAskingModifyApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.097"/>
  <testcase name="testAskPathApi on testAskPathApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0"/>
  <testcase name="readingAnotherBal on readingAnotherBal(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0"/>
  <testcase name="testAskingGenerateApi on testAskingGenerateApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="readingSuggestionAPIInput on readingSuggestionAPIInput(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="readingBalInput on readingBalInput(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0"/>
  <testcase name="readingPLAInput on readingPLAInput(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="testAskingForSuggestionApi on testAskingForSuggestionApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="readingSuggestionAPIInputWithNoAnswer on readingSuggestionAPIInputWithNoAnswer(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.004"/>
  <testcase name="testingShowOutput on testingShowOutput(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0"/>
  <testcase name="testingUpdate on testingUpdate(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="testGenerateApi on testGenerateApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="readingModifyApi on readingModifyApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.002"/>
  <testcase name="testingConstructor on testingConstructor(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="readingNotGenerateApi on readingNotGenerateApi(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="testAskingForBal on testAskingForBal(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0.001"/>
  <testcase name="testAskingForPLA on testAskingForPLA(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0"/>
  <testcase name="testAskingAnother on testAskingAnother(fourcats.view.CLITest)" classname="fourcats.view.CLITest" time="0"/>
</testsuite>